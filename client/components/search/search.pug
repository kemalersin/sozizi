.jumbotron.search-bar.text-center
  h2 {{search.label}}
  span.input(ng-class='{"filled": search.query.length > 0}')
    input(
      type='text',
      id='input-search',
      ng-change='search.inputChange()',
      ng-model='search.query'
      ng-model-options='{debounce: 500}'
    )
    label(for='input-search')
      span.content Search

div
  #search-result
    .row
      .col-md-12
        ul.pagination-sm(
          uib-pagination,
          ng-if='search.totalItems',
          total-items='search.totalItems',
          ng-model='search.currentPage',
          max-size='search.maxSize',
          items-per-page='search.itemsPerPage',
          boundary-link-numbers='true',
          rotate='false',
          ng-change='search.pageChange()'
        )

      .col-md-12(ng-if='search.type==="books"', keep-scroll)
        .row
          .col-xs-12.col-sm-6.col-md-3.text-center(ng-repeat='book in search.items')
            a.thumbnail.book-image(title='{{book.title}}', ui-sref='quotes.add({book})')
              span.img-wrapper
                img(src='{{book.image_url}}')
              .caption
                p.book-title {{book.title}}
                p.author {{book.author.name}}

      .col-md-12
        .container(
          angular-grid='search.items',
          ag-id='archive',
          ag-grid-width='300',
          ag-gutter-size='10',
          ag-performant-scroll='true',
          ng-if='search.type==="archive"',
          keep-scroll
        )
          .well.quote(ng-repeat='quote in search.items track by $index')
            .media
              h4.media-heading
                a.text-default(ui-sref='goodreads.book({id: quote.book.id})')
                  | {{quote.book.title}}
              p
                a.text-default(ui-sref='goodreads.author({id: quote.book.author.id})')
                  | {{quote.book.author.name}}
              blockquote
                | {{quote.body}}
                p
              .media-bottom.text-right
                a.btn.text-muted.no-padding-left(ui-sref='quotes.show({id: quote.id})')
                  i.glyphicon.glyphicon-time
                  | &nbsp;
                  span(am-time-ago='quote.date')
